# General info: https://docs.gitlab.com/ee/ci/yaml/
# Building maven: https://docs.gitlab.com/ee/user/project/packages/maven_repository.html

variables:
  MAVEN_IMAGE11: $CI_REGISTRY_IMAGE/maven:3.9-eclipse-temurin-11jdk
  MAVEN_IMAGE17: $CI_REGISTRY_IMAGE/maven:3.9-eclipse-temurin-17jdk
  FF_NETWORK_PER_BUILD: 1
  # Configure mysql environment variables (https://hub.docker.com/_/mariadb/)
  MYSQL_DATABASE: "root"
  MYSQL_ROOT_PASSWORD: ""
  MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  # to use dind-rootless, define 'environment = ["DIND_ROOTLESS=-rootless"]' in runner-config/config.toml additionally to allowed_privileged_services etc., cf. https://docs.gitlab.com/runner/executors/docker.html#use-rootless-docker-in-docker-with-restricted-privileged-mode and https://forum.gitlab.com/t/94101
  DOCKER_TLS_CERTDIR: ""

stages:
 - prepare
 - build

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

prepare-docker-image:
  stage: prepare
  needs: []
  cache: {}
  image: docker:26.0
  services:
    - name: docker:26.0-dind$DIND_ROOTLESS
      command: ["--tls=false"]
  script:
    - cd .gitlab-ci
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - docker build --pull -t $MAVEN_IMAGE11 .
    - docker push $MAVEN_IMAGE11
    - sed -i 's/-11-/-17-/' Dockerfile
    - docker build --pull -t $MAVEN_IMAGE17 .
    - docker push $MAVEN_IMAGE17
    - cd tomcat
    - cp ../../submissiondir/junit.jar .
    - cp ../../SecurityManager/NoExitSecurityManager.jar .
    - cp ../../submissiondir/plaggie.properties .
    - mkdir lectures
    - cp -r ../../src/test/resources/lecture1 lectures/1
    - docker build -t $CI_REGISTRY_IMAGE/tomcat:latest .
    - docker push $CI_REGISTRY_IMAGE/tomcat:latest
  rules:
    - if: $UPDATE_CONTAINER
      when: always
    - changes:
      - .gitlab-ci.yml
      - .gitlab-ci/Dockerfile
      - .gitlab-ci/tomcat/**
      when: always
    - when: never

compile-jdk11:
  image: $MAVEN_IMAGE11
  services:
    - mariadb:10.6
    - name: $CI_REGISTRY_IMAGE/tomcat:latest
      alias: tomcat
  stage: build
  needs:
    - job: prepare-docker-image
      optional: true
  before_script:
    - perl -pi -e "s|localhost/[a-zA-Z0-9]+|mariadb/abgabesystem|g" src/main/resources/hibernate.cfg.xml
    - perl -pi -e 's|hibernate.show_sql">true|hibernate.show_sql">false|g' src/main/resources/hibernate.cfg.xml
  script:
    - '[ -z "$SKIP_ONLINE_TESTS" ] && xmlstarlet val -w -e -s http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd src/main/webapp/WEB-INF/web.xml || echo "Skipped"'
    - '[ -z "$SKIP_ONLINE_TESTS" ] && xmlstarlet val -w -e -d http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd src/main/resources/hibernate.cfg.xml || echo "Skipped"'
    - >
      xmlstarlet edit --inplace -N x="http://xmlns.jcp.org/xml/ns/javaee" 
      --update "/x:web-app/x:context-param[x:param-name[text()='datapath']]/x:param-value" --value "/srv/submissioninterface" 
      --update "/x:web-app/x:filter[x:filter-name[text()='AuthenticationFilter']]/x:init-param[x:param-name[text()='login']]/x:param-value" --value "de.tuclausthal.submissioninterface.authfilter.authentication.login.impl.Form" 
      --update "/x:web-app/x:filter[x:filter-name[text()='AuthenticationFilter']]/x:init-param[x:param-name[text()='verify']]/x:param-value" --value "de.tuclausthal.submissioninterface.authfilter.authentication.verify.impl.FakeVerify" 
      src/main/webapp/WEB-INF/web.xml
    - 'mvn $MAVEN_CLI_OPTS verify'
    - mysql -u root -h mariadb -e 'create database abgabesystem CHARACTER SET = utf8mb4 COLLATE = utf8mb4_bin;'
    - mysql -u root -h mariadb abgabesystem < mysql.sql
    - mysql -u root -h mariadb abgabesystem < test-data.sql
    - curl --no-keepalive -u 'admin:s3cret' -T target/GATE-1.0-SNAPSHOT.war --no-keepalive -s -S -f "http://tomcat:8080/manager/text/deploy?path=/SubmissionInterface&update=true" | tee .deploy-error.tmp ; cat .deploy-error.tmp | grep -q "OK - Deployed application at context path"
    - GATE_DB_TESTS=1 GATE_WEB_TESTS="http://tomcat:8080" mvn $MAVEN_CLI_OPTS test
    - mvn exec:java -Dexec.mainClass="de.tuclausthal.submissioninterface.util.HibernateSQLExporter"
  # keep built artifacts
  artifacts:
    paths:
      - target/*.war
      - db-schema.sql
    expire_in: 1 week

compile-jdk17:
  extends: compile-jdk11
  image: $MAVEN_IMAGE17
